# services:
#   mysql:
#     image: mysql:8.4
#     container_name: db
#     ports:
#       - "0.0.0.0:3306:3306"
#     env_file:
#       - ./env/db/.env
#     volumes:
#       - mysql_data:/var/lib/mysql
#     networks:
#       - my_app_net
#     restart: unless-stopped
  
#   api:
#     build:
#       context: backend
#       dockerfile: Dockerfile
#     container_name: api
#     depends_on:
#       - mysql
#     restart: on-failure
#     ports:
#       - "8080:8080"
#     networks:
#       - my_app_net
#     env_file:
#       - ./env/backend/.env
      
# volumes:
#   mysql_data:

# networks:
#   my_app_net:
#     driver: bridge



version: "3.8"

services:
  mysql:
    image: mysql:8.4
    container_name: db
    ports:
      - "3306:3306"  # MySQL default port exposed
    env_file:
      - ./env/db/.env
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my_app_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: api
    depends_on:
      mysql:
        condition: service_healthy
    restart: on-failure
    ports:
      - "8080:8080"  # API service port
    env_file:
      - ./env/backend/.env
    networks:
      - my_app_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/docs"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:

networks:
  my_app_net:
    driver: bridge
