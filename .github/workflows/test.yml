name: Python Backend Tests

on:
  workflow_call:

jobs:
  run-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.DB_MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.DB_MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u${{ secrets.DB_MYSQL_USER }} -p${{ secrets.DB_MYSQL_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h"127.0.0.1" -u${{ secrets.DB_MYSQL_USER }} -p${{ secrets.DB_MYSQL_PASSWORD }} --silent; then
              echo "MySQL is ready."
              break
            fi
            echo "Waiting for MySQL... ($i)"
            sleep 5
          done

      - name: Export environment variables
        run: |
          echo "PORT=${{ secrets.BACKEND_PORT }}" >> $GITHUB_ENV
          echo "DEBUG=${{ secrets.BACKEND_DEBUG }}" >> $GITHUB_ENV
          echo "MYSQL_DATABASE=${{ secrets.BACKEND_MYSQL_DATABASE }}" >> $GITHUB_ENV
          echo "MYSQL_USER=${{ secrets.BACKEND_MYSQL_USER }}" >> $GITHUB_ENV
          echo "MYSQL_PASSWORD=${{ secrets.BACKEND_MYSQL_PASSWORD }}" >> $GITHUB_ENV
          echo "MYSQL_HOST=${{ secrets.BACKEND_MYSQL_HOST }}" >> $GITHUB_ENV
          echo "MYSQL_PORT=${{ secrets.BACKEND_MYSQL_PORT }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.BACKEND_SECRET_KEY }}" >> $GITHUB_ENV
          echo "ENV=${{ secrets.TEST_ENV }}" >> $GITHUB_ENV
          echo "TEST_SECRET_KEY=${{ secrets.TEST_SECRET_KEY }}" >> $GITHUB_ENV
          echo "PYTHONPATH=backend" >> $GITHUB_ENV

      - name: Initialize database schema
        run: python scripts/init_db.py
        working-directory: backend

      - name: Run tests
        run: pytest tests
        working-directory: backend

      - name: Clean up Docker containers
        if: always()
        run: docker container prune -f
