name: Setup Environment Files
description: Create backend, DB, and test .env files

inputs:
  backend_env:
    required: true
  mysql_env:
    required: true
  test_env:
    required: true

runs:
  using: "composite"
  steps:
    - name: Create directories
      shell: bash
      run: |
        mkdir -p env/backend env/db

    - name: Write backend .env
      shell: bash
      run: |
        echo "PORT=${{ secrets.BACKEND_PORT }}" >> env/backend/.env
        echo "DEBUG=${{ secrets.BACKEND_DEBUG }}" >> env/backend/.env
        echo "MYSQL_DATABASE=${{ secrets.BACKEND_MYSQL_DATABASE }}" >> env/backend/.env
        echo "MYSQL_USER=${{ secrets.BACKEND_MYSQL_USER }}" >> env/backend/.env
        echo "MYSQL_PASSWORD=${{ secrets.BACKEND_MYSQL_PASSWORD }}" >> env/backend/.env
        echo "MYSQL_HOST=${{ secrets.BACKEND_MYSQL_HOST }}" >> env/backend/.env
        echo "MYSQL_PORT=${{ secrets.BACKEND_MYSQL_PORT }}" >> env/backend/.env
        echo "SECRET_KEY=${{ secrets.BACKEND_SECRET_KEY }}" >> env/backend/.env

    - name: Write DB .env
      shell: bash
      run: |
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.DB_MYSQL_ROOT_PASSWORD }}" >> env/db/.env
        echo "MYSQL_DATABASE=${{ secrets.DB_MYSQL_DATABASE }}" >> env/db/.env
        echo "MYSQL_USER=${{ secrets.DB_MYSQL_USER }}" >> env/db/.env
        echo "MYSQL_PASSWORD=${{ secrets.DB_MYSQL_PASSWORD }}" >> env/db/.env

    - name: Write test .env
      shell: bash
      run: |
        echo "ENV=${{ secrets.TEST_ENV }}" >> .env.test
        echo "SECRET_KEY=${{ secrets.TEST_SECRET_KEY }}" >> .env.test
        echo "MYSQL_HOST=${{ secrets.TEST_MYSQL_HOST }}" >> .env.test
        echo "MYSQL_PORT=${{ secrets.TEST_MYSQL_PORT }}" >> .env.test
        echo "MYSQL_DATABASE=${{ secrets.TEST_MYSQL_DATABASE }}" >> .env.test
        echo "MYSQL_USER=${{ secrets.TEST_MYSQL_USER }}" >> .env.test
        echo "MYSQL_PASSWORD=${{ secrets.TEST_MYSQL_PASSWORD }}" >> .env.test
